@using ECommerce.Client.Services
@using ECommerce.Client.Models

@page "/"
@inject ProductService ProductService
@inject IJSRuntime JS

<h1>Featured Product</h1>

@if (featuredProduct != null)
{
    <div class="featured-product">
        <h2>@featuredProduct.Name</h2>
        <p>@featuredProduct.Description</p>
        <p>Price: @featuredProduct.Price.ToString("C")</p>

        @if (!string.IsNullOrEmpty(featuredProduct.ImageUrl))
        {
            <img src="@featuredProduct.ImageUrl" alt="@featuredProduct.Name" width="300" />
        }
    </div>
}
else
{
    <p>Loading featured product...</p>
}

@code {
    private List<Product> products = new();
    private Product? featuredProduct;
    private System.Timers.Timer? timer;

    protected override async Task OnInitializedAsync()
    {
        products = await ProductService.GetProductsAsync();
        PickRandomProduct();

        // Set up a timer to change product every 5 seconds
        timer = new System.Timers.Timer(5000);
        timer.Elapsed += (sender, args) =>
        {
            InvokeAsync(() =>
            {
                PickRandomProduct();
                StateHasChanged();
            });
        };
        timer.Start();
    }

    private void PickRandomProduct()
    {
        if (products.Count > 0)
        {
            var rand = new Random();
            featuredProduct = products[rand.Next(products.Count)];
        }
    }

    public void Dispose()
    {
        timer?.Dispose();
    }
}
